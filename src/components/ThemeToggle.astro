---
import Sun from "src/assets/icons/Sun.astro"
import Moon from "src/assets/icons/Moon.astro"
---

<button class="btn" aria-label="Switch to dark theme">
    <label class="switch">
        <!-- <span class="sr-only">Change theme</span> -->
        <input type="checkbox" name="theme-toggle" checked >
        <span class="slider"></span>
        <Sun />
        <Moon />
    </label>
</button>

<script defer>
    const themeToggles = document.querySelectorAll('[name="theme-toggle"]');

    // store theme
    const storeTheme = function (theme) {
        localStorage.setItem("theme", theme);
    };

    themeToggles.forEach((toggle) => {
        toggle.addEventListener("click", () => {
            document.body.classList.contains("light-theme")
                ? enableDarkMode()
                : enableLightMode();
        });
    });

    function enableDarkMode() {
        document.body.classList.remove("light-theme");
        document.body.classList.add("dark-theme");
        themeToggles.forEach((toggle) => {
            toggle.closest('button').setAttribute("aria-label", "Switch to light theme");
            toggle.checked = false;
        });
        storeTheme("dark");
    }

    function enableLightMode() {
        document.body.classList.remove("dark-theme");
        document.body.classList.add("light-theme");
        themeToggles.forEach((toggle) => {
            toggle.closest('button').setAttribute("aria-label", "Switch to dark theme");
            toggle.checked = true;
        });
        storeTheme("light");
    }

    function setThemePreference() {
        // if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
        //     enableDarkMode();
        //     return;
        // }
        const activeTheme = localStorage.getItem("theme");
        if (activeTheme === "light") {
            enableLightMode();
        } else {
            enableDarkMode();
        }
    }

    document.onload = setThemePreference();
</script>

<style>
    button {
        padding-inline: 1rem;
    }
    .switch {
        position: relative;
        display: inline-block;
        width: 40px;
        height: 20px;
    }
    .switch input {
        opacity: 0;
        width: 0;
        height: 0;
    }
    .switch :global(svg) {
        position: absolute;
        height: 12px;
        width: 12px;
        bottom: 4px;
        pointer-events: none;
    }
    .switch :global(#moon) {
        left: 4px;
    }
    .switch :global(#sun) {
        right: 4px;
    }
    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        border-radius: 34px;
        background: rgb(255, 245, 0);
        background: linear-gradient(
            25deg,
            rgba(255, 245, 0, 1) 20%,
            rgba(218, 158, 5, 1) 200%
        );
        -webkit-transition: 0.4s;
        transition: 0.4s;
    }

    .slider:before {
        position: absolute;
        content: "";
        height: 14px;
        width: 14px;
        left: 4px;
        bottom: 3px;
        border-radius: 50%;
        background-color: white;
        -webkit-transition: 0.4s;
        transition: 0.4s;
    }
    input:checked + .slider {
        background: rgb(0, 37, 161);
        background: linear-gradient(
            63deg,
            rgba(0, 37, 161, 1) 50%,
            rgba(0, 21, 92, 1) 100%
        );
    }
    input:checked + .slider:before {
        -webkit-transform: translateX(19px);
        -ms-transform: translateX(19px);
        transform: translateX(19px);
    }
</style>
